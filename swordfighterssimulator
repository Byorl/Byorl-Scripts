local v1 = require(game:GetService("ReplicatedStorage").Packages.Knit);
u4 = v1.GetController("DataController")


function Save()
    return u4:GetData("PlayerData");
end

if getgenv().settings.manualStardust == true then
    for i,v in pairs(Save().PetInv) do
        if getgenv().settings.manualStardustSettings.manuallockpets == true then
            local ohString1 = i
                
            game:GetService("ReplicatedStorage").Packages.Knit.Services.PetInvService.RF.LockPet:InvokeServer(ohString1)
        end

        if getgenv().settings.manualStardustSettings.manualmaxPets == true then
            game:GetService("ReplicatedStorage").Packages.Knit.Services.PetFeedingService.RF.Feed:InvokeServer(unpack({
                [1] = i,
                [2] = math.huge
            }))
        end
    end
end


while getgenv().settings.autoStardust == true do
    task.wait()

    for i,v in pairs(Save().PetInv) do
        -- Automatically sets the pet to max level to get shit ton of stardust.

        if getgenv().settings.autoStardustSettings.automaxPets == true then
            game:GetService("ReplicatedStorage").Packages.Knit.Services.PetFeedingService.RF.Feed:InvokeServer(unpack({
                [1] = i,
                [2] = math.huge
            }))
        end


        -- Automatically locks your pet after (This can be really fucking buggy by the way, like it will keep locking and unlocking pets.)
        if getgenv().settings.autoStardustSettings.autolockPets == true then
            local ohString1 = i
            
            game:GetService("ReplicatedStorage").Packages.Knit.Services.PetInvService.RF.LockPet:InvokeServer(ohString1)
        end
    end
end

